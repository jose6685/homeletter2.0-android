/*
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import groovy.xml.MarkupBuilder

plugins {
    id 'com.android.application'
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
}
// Removed legacy TWA manifest configuration

android {
    compileSdk = 35
    namespace = "org.homeletter.app"
    defaultConfig {
        applicationId "org.homeletter.app"
        minSdk = 21
        targetSdk = 35
        versionCode 10
        versionName "10"
    }
    buildFeatures {
        buildConfig = true
        compose = true
    }
    composeOptions {
        // Align Compose Compiler with Kotlin 2.0.21
        kotlinCompilerExtensionVersion = "1.7.2"
    }
    flavorDimensions "env"
    productFlavors {
        dev {
            dimension "env"
            buildConfigField "String", "API_BASE_URL", '"http://10.0.2.2:3000"'
        }
        prod {
            dimension "env"
            buildConfigField "String", "API_BASE_URL", '"https://homeletter2-0-backend.onrender.com"'
        }
    }
    // Guard release signing so debug/dev builds don't evaluate missing or invalid keystore
    def keystoreFile = project.hasProperty('RELEASE_STORE_FILE') ? file(RELEASE_STORE_FILE) : null
    def hasReleaseSigning = keystoreFile != null && keystoreFile.exists() &&
            project.hasProperty('RELEASE_STORE_PASSWORD') &&
            project.hasProperty('RELEASE_KEY_ALIAS') &&
            project.hasProperty('RELEASE_KEY_PASSWORD')

    signingConfigs {
        release {
            // Use Groovy ternary operator instead of invalid inline if-expression
            storeFile = hasReleaseSigning ? file(RELEASE_STORE_FILE) : null
            storePassword = hasReleaseSigning ? RELEASE_STORE_PASSWORD : ""
            keyAlias = hasReleaseSigning ? RELEASE_KEY_ALIAS : ""
            keyPassword = hasReleaseSigning ? RELEASE_KEY_PASSWORD : ""
        }
    }

    buildTypes {
        release {
            minifyEnabled = true
        }
    }

    if (hasReleaseSigning) {
        buildTypes {
            release {
                // Apply release signing config only when properties exist
                signingConfig = signingConfigs.release
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    lint {
        abortOnError = false
        checkReleaseBuilds = false
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

// 移除重複且錯誤的 Compose 依賴區塊，改以下方唯一 dependencies 區塊統一管理

// Removed legacy Bubblewrap/TWA shortcuts generation task and dependency

repositories {
    google()
    mavenCentral()
}

// Retrofit dependencies
dependencies {
    // Retrofit dependencies
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    
    implementation libs.core.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.activity.compose
    implementation platform('androidx.compose:compose-bom:2024.09.00')
    implementation libs.ui
    implementation libs.ui.graphics
    implementation libs.ui.tooling.preview
    implementation libs.material3
    implementation libs.runtime
    implementation libs.foundation
    // AdMob / Google Mobile Ads SDK
    implementation 'com.google.android.gms:play-services-ads:23.3.0'
    // 網路與協程
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    androidTestImplementation platform(libs.compose.bom)
    androidTestImplementation libs.ui.test.junit4
    debugImplementation libs.ui.tooling
    debugImplementation libs.ui.test.manifest

}
